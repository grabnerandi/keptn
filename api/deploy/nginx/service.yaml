apiVersion: v1
kind: ConfigMap
metadata:
  name: api-nginx-config
  namespace: keptn
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }

    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      server {
          listen       80;
          server_name  _;

          location  /configuration-service {
            # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
            # the access is denied) before we store the file
            # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
            auth_request               /v1/auth;

            rewrite /configuration-service/(.*) /$1  break;
            proxy_pass         http://configuration-service:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }

          location /mongodb-datastore {
            # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
            # the access is denied) before we store the file
            # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
            auth_request               /v1/auth;

            rewrite /mongodb-datastore/(.*) /$1  break;
            proxy_pass         http://mongodb-datastore.keptn-datastore:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }

          location /shipyard-service {
            # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
            # the access is denied) before we store the file
            # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
            auth_request               /v1/auth;

            rewrite /shipyard-service/(.*) /$1  break;
            proxy_pass         http://shipyard-service:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }

          # special configuration for /v1/auth to always use POST requests
          location /v1/auth {
            rewrite /v1/auth/(.*) /$1  break;

            proxy_method POST;
            proxy_pass_request_body off;

            proxy_pass http://api-service:8080;
            proxy_http_version 1.1;
            proxy_pass_request_headers on; # only pass reuquest headers to this service
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }

          location /v2 {
            # ToDo
            rewrite /v2/(.*) /$1  break;
          }

          # default location: use existing api
          location / {
            proxy_pass http://api-service:8080;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: api
  replicas: 1
  template:
    metadata:
      labels:
        run: api
    spec:
      containers:
        - name: api
          image: nginx:1.17.9
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx # mount api-nginx-config volume to /etc/nginx
              readOnly: true
              name: api-nginx-config
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: API_SERVICE_URI
              value: api-service.keptn.svc.cluster.local:8080
            - name: DATASTORE_URI
              value: mongodb-datastore.keptn-datastore.svc.cluster.local:8080
            - name: CONFIGURATION_URI
              value: configuration-service.keptn.svc.cluster.local:8080
      volumes:
        - name: api-nginx-config
          configMap:
            name: api-nginx-config # place ConfigMap `api-nginx-config` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: keptn
  labels:
    run: api
spec:
  ports:
    - port: 80
      name: http
      targetPort: 80
      protocol: TCP
    - port: 443
      name: https
      targetPort: 80
      protocol: TCP
  selector:
    run: api